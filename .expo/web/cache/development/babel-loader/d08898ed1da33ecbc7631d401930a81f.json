{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Firebase from \"../../firebase\";\nimport firebase from \"firebase\";\nimport uuidv4 from \"uuid\";\nvar auth = Firebase.auth();\nexport function registration(name, email, phoneNumber, password) {\n  var currentUser, db;\n  return _regeneratorRuntime.async(function registration$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(auth.createUserWithEmailAndPassword(email, password));\n\n        case 3:\n          currentUser = auth.currentUser;\n          db = firebase.firestore();\n          db.collection(\"users\").doc(currentUser.uid).set({\n            name: name,\n            email: currentUser.email,\n            phoneNumber: phoneNumber,\n            password: password\n          });\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          alert(_context.t0.message);\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 8]], Promise);\n}\nexport function submitPost(name, phoneNumber, website, description, selectedPrice, selectedVariant, selectedCategory, userName, totalVote, logo, email) {\n  var currentUser, db;\n  return _regeneratorRuntime.async(function submitPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          try {\n            currentUser = auth.currentUser;\n            db = firebase.firestore();\n            db.collection(\"posts\").doc(uuidv4()).set({\n              name: name,\n              phoneNumber: phoneNumber,\n              website: website,\n              description: description,\n              selectedPrice: selectedPrice,\n              selectedVariant: selectedVariant,\n              selectedCategory: selectedCategory,\n              userName: userName,\n              totalVote: totalVote,\n              logo: logo,\n              approve: true,\n              time: Date.now(),\n              email: email\n            });\n          } catch (err) {\n            alert(err.message);\n          }\n\n        case 1:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function updateProfile(name, phoneNumber, bio, website) {\n  var currentUser, db;\n  return _regeneratorRuntime.async(function updateProfile$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          try {\n            currentUser = auth.currentUser;\n            db = firebase.firestore();\n            db.collection(\"users\").doc(currentUser.uid).update({\n              name: name,\n              phoneNumber: phoneNumber,\n              bio: bio,\n              website: website\n            }, {\n              merge: true\n            });\n          } catch (err) {\n            alert(err.message);\n          }\n\n        case 1:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function signIn(email, password) {\n  return _regeneratorRuntime.async(function signIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password));\n\n        case 3:\n          _context4.next = 8;\n          break;\n\n        case 5:\n          _context4.prev = 5;\n          _context4.t0 = _context4[\"catch\"](0);\n          alert(_context4.t0.message);\n\n        case 8:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n}\nexport function loggingOut() {\n  return _regeneratorRuntime.async(function loggingOut$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().signOut());\n\n        case 3:\n          _context5.next = 8;\n          break;\n\n        case 5:\n          _context5.prev = 5;\n          _context5.t0 = _context5[\"catch\"](0);\n          alert(_context5.t0.message);\n\n        case 8:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n}","map":{"version":3,"sources":["/Users/mac/Desktop/expo-boilerplate-main/src/api/firebaseAPI.js"],"names":["Firebase","firebase","uuidv4","auth","registration","name","email","phoneNumber","password","createUserWithEmailAndPassword","currentUser","db","firestore","collection","doc","uid","set","alert","message","submitPost","website","description","selectedPrice","selectedVariant","selectedCategory","userName","totalVote","logo","approve","time","Date","now","err","updateProfile","bio","update","merge","signIn","signInWithEmailAndPassword","loggingOut","signOut"],"mappings":"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","sourcesContent":["import Firebase from '../../firebase';\nimport firebase from \"firebase\";\nimport uuidv4 from \"uuid\";\n\nconst auth = Firebase.auth();\n\nexport async function registration(name, email, phoneNumber, password) {\n    try {\n        await auth.createUserWithEmailAndPassword(email, password);\n        const currentUser = auth.currentUser;\n        const db = firebase.firestore();\n        db.collection(\"users\")\n            .doc(currentUser.uid)\n            .set({\n                name: name,\n                email: currentUser.email,\n                phoneNumber: phoneNumber,\n                password: password\n            });\n    } catch (err) {\n        alert(err.message);\n    }\n}\n\nexport async function submitPost(\n    name,\n    phoneNumber,\n    website,\n    description,\n    selectedPrice,\n    selectedVariant,\n    selectedCategory,\n    userName,\n    totalVote,\n    logo,\n    email\n) {\n    try {\n        const currentUser = auth.currentUser;\n        const db = firebase.firestore();\n        db.collection(\"posts\")\n            .doc(uuidv4())\n            .set({\n                    name: name,\n                    phoneNumber: phoneNumber,\n                    website: website,\n                    description: description,\n                    selectedPrice: selectedPrice,\n                    selectedVariant: selectedVariant,\n                    selectedCategory: selectedCategory,\n                    userName: userName,\n                    totalVote: totalVote,\n                    logo: logo,\n                    approve: true,\n                    time: Date.now(),\n                    email: email\n                }\n            )\n        ;\n    } catch (err) {\n        alert(err.message);\n    }\n}\n\n\nexport async function updateProfile(name, phoneNumber, bio, website) {\n    try {\n        const currentUser = auth.currentUser;\n        const db = firebase.firestore();\n        db.collection(\"users\")\n            .doc(currentUser.uid)\n            .update({\n                name: name,\n                phoneNumber: phoneNumber,\n                bio: bio,\n                website: website\n            }, {merge: true});\n    } catch (err) {\n        alert(err.message);\n    }\n}\n\nexport async function signIn(email, password) {\n    try {\n        await firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password);\n    } catch (err) {\n        alert(err.message);\n    }\n}\n\nexport async function loggingOut() {\n    try {\n        await firebase.auth().signOut();\n    } catch (err) {\n        alert(err.message);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}