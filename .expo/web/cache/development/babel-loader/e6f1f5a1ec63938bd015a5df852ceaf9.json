{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Desktop/expo-boilerplate-main/src/screens/ProfileScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar, Button, TextInput } from 'react-native-paper';\nimport firebase from \"firebase\";\nimport { updateProfile } from \"../api/firebaseAPI\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n  var currentUserUID = firebase.auth().currentUser.uid;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      bio = _React$useState4[0],\n      setBio = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      website = _React$useState10[0],\n      setWebsite = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      phoneNumber = _React$useState12[0],\n      setPhoneNumber = _React$useState12[1];\n\n  var onHandleUpdateProfile = function onHandleUpdateProfile() {\n    return _regeneratorRuntime.async(function onHandleUpdateProfile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(name !== '' && phoneNumber !== '' && bio !== '' && website !== \"\")) {\n              _context.next = 6;\n              break;\n            }\n\n            alert('Profile Updated');\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(updateProfile(name, phoneNumber, bio, website).then(navigation.navigate('Main')));\n\n          case 4:\n            _context.next = 7;\n            break;\n\n          case 6:\n            alert('Please fill the empty fields.');\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    function getUserInfo() {\n      var doc, dataObj;\n      return _regeneratorRuntime.async(function getUserInfo$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(firebase.firestore().collection('users').doc(currentUserUID).get());\n\n            case 2:\n              doc = _context2.sent;\n\n              if (!doc.exists) {\n                alert('No user data found!');\n              } else {\n                dataObj = doc.data();\n                setName(dataObj.name);\n                setBio(dataObj.bio);\n                setPassword(dataObj.password);\n                setEmail(dataObj.email);\n                setWebsite(dataObj.website);\n                setPhoneNumber(dataObj.phoneNumber);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getUserInfo();\n  });\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), React.createElement(StatusBar, {\n    animated: true,\n    backgroundColor: \"#61dafb\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      marginTop: 10,\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, React.createElement(Avatar.Image, {\n    size: 100,\n    source: require(\"../../assets/favicon.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Name\",\n    placeholder: \"Type your name\",\n    autoCapitalize: \"none\",\n    textContentType: \"name\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Email\",\n    editable: false,\n    selectTextOnFocus: false,\n    placeholder: \"Type your email\",\n    autoCapitalize: \"none\",\n    textContentType: \"emailAddress\",\n    value: email,\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Phone Number\",\n    placeholder: \"Type your phone number\",\n    autoCapitalize: \"none\",\n    textContentType: \"telephoneNumber\",\n    value: phoneNumber,\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return setPhoneNumber(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    textContentType: \"password\",\n    editable: false,\n    selectTextOnFocus: false,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    placeholder: \"Type your password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Bio\",\n    placeholder: \"Type your bio\",\n    autoCapitalize: \"none\",\n    textContentType: \"name\",\n    value: bio,\n    onChangeText: function onChangeText(text) {\n      return setBio(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Website\",\n    placeholder: \"Type your website link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    icon: \"account\",\n    mode: \"contained\",\n    onPress: onHandleUpdateProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, \"Update\"), React.createElement(View, {\n    style: {\n      height: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginTop: 20,\n    paddingBottom: 15,\n    backgroundColor: \"#fff\"\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/mac/Desktop/expo-boilerplate-main/src/screens/ProfileScreen.js"],"names":["React","useEffect","Avatar","Button","TextInput","firebase","updateProfile","useNavigation","ProfileScreen","navigation","currentUserUID","auth","currentUser","uid","useState","name","setName","bio","setBio","email","setEmail","password","setPassword","website","setWebsite","phoneNumber","setPhoneNumber","onHandleUpdateProfile","alert","then","navigate","getUserInfo","firestore","collection","doc","get","exists","dataObj","data","styles","container","height","flex","marginTop","alignItems","require","backgroundColor","text","StyleSheet","create","paddingLeft","paddingRight","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport {SafeAreaView, ScrollView, StatusBar, StyleSheet, View} from \"react-native\";\nimport {Avatar, Button, TextInput} from 'react-native-paper';\nimport firebase from \"firebase\";\nimport {updateProfile} from \"../api/firebaseAPI\";\nimport {useNavigation} from \"@react-navigation/native\";\n\nconst ProfileScreen = () => {\n    const navigation = useNavigation();\n\n    let currentUserUID = firebase.auth().currentUser.uid;\n\n    const [name, setName] = React.useState('');\n    const [bio, setBio] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [website, setWebsite] = React.useState('');\n    const [phoneNumber, setPhoneNumber] = React.useState('');\n\n    const onHandleUpdateProfile = async () => {\n        if (name !== '' && phoneNumber !== '' && bio !== '' && website !== \"\") {\n            alert('Profile Updated')\n            await updateProfile(name, phoneNumber, bio, website)\n                .then(navigation.navigate('Main'));\n        } else {\n            alert('Please fill the empty fields.')\n        }\n    };\n\n    useEffect(() => {\n        async function getUserInfo() {\n            let doc = await firebase\n                .firestore()\n                .collection('users')\n                .doc(currentUserUID)\n                .get();\n\n            if (!doc.exists) {\n                alert('No user data found!')\n            } else {\n                let dataObj = doc.data();\n                setName(dataObj.name);\n                setBio(dataObj.bio);\n                setPassword(dataObj.password);\n                setEmail(dataObj.email);\n                setWebsite(dataObj.website);\n                setPhoneNumber(dataObj.phoneNumber);\n            }\n        }\n\n        getUserInfo();\n    })\n\n    return (\n        <ScrollView\n            showsVerticalScrollIndicator={false}\n            style={styles.container}>\n            <SafeAreaView>\n                <View style={{height: 4}}/>\n                <StatusBar\n                    animated={true}\n                    backgroundColor=\"#61dafb\"/>\n                <View style={{flex: 1, marginTop: 10, alignItems: 'center'}}>\n                    <Avatar.Image size={100} source={require('../../assets/favicon.png')}/>\n                </View>\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Name\"\n                    placeholder=\"Type your name\"\n                    autoCapitalize='none'\n                    textContentType='name'\n                    value={name}\n                    onChangeText={text => setName(text)}\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Email\"\n                    editable={false}\n                    selectTextOnFocus={false}\n                    placeholder=\"Type your email\"\n                    autoCapitalize='none'\n                    textContentType='emailAddress'\n                    value={email}\n                    autoFocus={true}\n                    onChangeText={text => setEmail(text)}\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Phone Number\"\n                    placeholder=\"Type your phone number\"\n                    autoCapitalize='none'\n                    textContentType='telephoneNumber'\n                    value={phoneNumber}\n                    autoFocus={true}\n                    onChangeText={text => setPhoneNumber(text)}\n                />\n                <View style={{height: 10}}/>\n\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Password\"\n                    autoCapitalize='none'\n                    autoCorrect={false}\n                    secureTextEntry={true}\n                    textContentType='password'\n                    editable={false}\n                    selectTextOnFocus={false}\n                    value={password}\n                    onChangeText={text => setPassword(text)}\n                    placeholder=\"Type your password\"\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Bio\"\n                    placeholder=\"Type your bio\"\n                    autoCapitalize='none'\n                    textContentType='name'\n                    value={bio}\n                    onChangeText={text => setBio(text)}\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Website\"\n                    placeholder=\"Type your website link\"\n                />\n                <View style={{height: 20}}/>\n                <Button icon=\"account\" mode=\"contained\" onPress={onHandleUpdateProfile}>\n                    Update\n                </Button>\n                <View style={{height: 30}}/>\n            </SafeAreaView>\n        </ScrollView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingLeft: 15,\n        paddingRight: 15,\n        marginTop: 20,\n        paddingBottom: 15,\n        backgroundColor: \"#fff\",\n    },\n});\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}