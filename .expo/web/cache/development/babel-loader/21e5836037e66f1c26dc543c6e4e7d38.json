{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Desktop/expo-boilerplate-main/src/screens/ProfileScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar, Button, TextInput } from 'react-native-paper';\nimport * as firebase from \"firebase\";\nimport { updateProfile } from \"../api/firebaseAPI\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as ImagePicker from 'expo-image-picker';\n\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n  var currentUserUID = firebase.auth().currentUser.uid;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      bio = _React$useState4[0],\n      setBio = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      website = _React$useState10[0],\n      setWebsite = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      phoneNumber = _React$useState12[0],\n      setPhoneNumber = _React$useState12[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      profileImage = _useState2[0],\n      setProfileImage = _useState2[1];\n\n  var imageUri = profileImage != null ? profileImage : \"\";\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      check = _useState6[0],\n      setCheck = _useState6[1];\n\n  var onHandleUpdateProfile = function onHandleUpdateProfile() {\n    return _regeneratorRuntime.async(function onHandleUpdateProfile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(website.length > 3)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert('Profile Updated');\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(updateProfile(name, phoneNumber, bio, website).then(navigation.navigate('Main')));\n\n          case 4:\n            _context.next = 7;\n            break;\n\n          case 6:\n            alert('Please fill the empty fields.');\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    function getUserInfo() {\n      var doc, dataObj;\n      return _regeneratorRuntime.async(function getUserInfo$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(firebase.firestore().collection('users').doc(currentUserUID).get());\n\n            case 2:\n              doc = _context2.sent;\n\n              if (!doc.exists) {\n                alert('No user data found!');\n              } else {\n                dataObj = doc.data();\n                setName(dataObj.name);\n                setBio(dataObj.bio);\n                setPassword(dataObj.password);\n                setEmail(dataObj.email);\n                setWebsite(dataObj.website);\n                setProfileImage(dataObj.image);\n                setPhoneNumber(dataObj.phoneNumber);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getUserInfo();\n  });\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 0\n            }));\n\n          case 2:\n            result = _context3.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              uploadImage(result.uri).then(function (r) {\n                return Alert.alert('Updated!', 'Profile image updated!', [{\n                  text: \"OK\",\n                  onPress: function onPress() {\n                    return props.navigation.goBack();\n                  }\n                }], {\n                  cancelable: true\n                });\n              }).catch(function (error) {\n                Alert.alert('Error!', 'Error in uploading!');\n              });\n            }\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage(uri) {\n    var response, blob, ref, downloadUrl;\n    return _regeneratorRuntime.async(function uploadImage$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context4.sent;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context4.sent;\n            ref = firebase.storage().ref().child(\"users/\" + currentUserUID + '/' + 'image-1');\n            downloadUrl = firebase.storage().ref().child(\"users/\" + currentUserUID + '/' + 'image-1').getDownloadURL().then(function (url) {\n              console.log(url);\n              firebase.database().ref('users/' + currentUserUID + '/').update({\n                image: url\n              }).then(function (r) {\n                return alert('Image Updated');\n              });\n            });\n            return _context4.abrupt(\"return\", ref.put(blob));\n\n          case 9:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }), React.createElement(StatusBar, {\n    animated: true,\n    backgroundColor: \"#61dafb\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: pickImage,\n    style: {\n      flex: 1,\n      marginTop: 10,\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, React.createElement(Avatar.Image, {\n    size: 100,\n    source: profileImage == null ? require(\"../../assets/favicon.png\") : imageUri,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Name\",\n    placeholder: \"Type your name\",\n    autoCapitalize: \"none\",\n    textContentType: \"name\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Email\",\n    editable: false,\n    selectTextOnFocus: false,\n    placeholder: \"Type your email\",\n    autoCapitalize: \"none\",\n    textContentType: \"emailAddress\",\n    value: email,\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Phone Number\",\n    placeholder: \"Type your phone number\",\n    autoCapitalize: \"none\",\n    textContentType: \"telephoneNumber\",\n    value: phoneNumber,\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return setPhoneNumber(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    textContentType: \"password\",\n    editable: false,\n    selectTextOnFocus: false,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    placeholder: \"Type your password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Bio\",\n    placeholder: \"Type your bio\",\n    autoCapitalize: \"none\",\n    textContentType: \"name\",\n    value: bio,\n    onChangeText: function onChangeText(text) {\n      return setBio(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Website\",\n    placeholder: \"Type your website link\",\n    textContentType: \"URL\",\n    value: website,\n    onChangeText: function onChangeText(text) {\n      return setWebsite(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    icon: \"account\",\n    mode: \"contained\",\n    onPress: onHandleUpdateProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \"Update\"), React.createElement(View, {\n    style: {\n      height: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginTop: 20,\n    paddingBottom: 15,\n    backgroundColor: \"#fff\"\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/mac/Desktop/expo-boilerplate-main/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","Avatar","Button","TextInput","firebase","updateProfile","useNavigation","ImagePicker","ProfileScreen","navigation","currentUserUID","auth","currentUser","uid","name","setName","bio","setBio","email","setEmail","password","setPassword","website","setWebsite","phoneNumber","setPhoneNumber","profileImage","setProfileImage","imageUri","isLoading","setLoading","check","setCheck","onHandleUpdateProfile","length","alert","then","navigate","getUserInfo","firestore","collection","doc","get","exists","dataObj","data","image","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","uploadImage","uri","r","Alert","text","onPress","props","goBack","cancelable","catch","error","fetch","response","blob","ref","storage","child","downloadUrl","getDownloadURL","url","database","update","put","styles","container","height","flex","marginTop","alignItems","require","backgroundColor","StyleSheet","create","paddingLeft","paddingRight","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Alert, SafeAreaView, ScrollView, StatusBar, StyleSheet, TouchableOpacity, View} from \"react-native\";\nimport {Avatar, Button, TextInput} from 'react-native-paper';\nimport * as firebase from \"firebase\";\nimport {updateProfile} from \"../api/firebaseAPI\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport * as ImagePicker from 'expo-image-picker';\n\nconst ProfileScreen = () => {\n    const navigation = useNavigation();\n    let currentUserUID = firebase.auth().currentUser.uid;\n\n    const [name, setName] = React.useState('');\n    const [bio, setBio] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [website, setWebsite] = React.useState('');\n    const [phoneNumber, setPhoneNumber] = React.useState('');\n    const [profileImage, setProfileImage] = useState('');\n\n    const imageUri = profileImage != null ? profileImage : \"\";\n    const [isLoading, setLoading] = useState(false);\n    const [check, setCheck] = useState(true);\n\n\n    const onHandleUpdateProfile = async () => {\n        if (website.length > 3) {\n            alert('Profile Updated')\n            await updateProfile(name, phoneNumber, bio, website)\n                .then(navigation.navigate('Main'));\n        } else {\n            alert('Please fill the empty fields.')\n        }\n    };\n\n    useEffect(() => {\n        async function getUserInfo() {\n            let doc = await firebase\n                .firestore()\n                .collection('users')\n                .doc(currentUserUID)\n                .get();\n\n            if (!doc.exists) {\n                alert('No user data found!')\n            } else {\n                let dataObj = doc.data();\n                setName(dataObj.name);\n                setBio(dataObj.bio);\n                setPassword(dataObj.password);\n                setEmail(dataObj.email);\n                setWebsite(dataObj.website);\n                setProfileImage(dataObj.image);\n                setPhoneNumber(dataObj.phoneNumber);\n            }\n        }\n\n        getUserInfo();\n    });\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\n            allowsEditing: true,\n            aspect: [4, 3],\n            quality: 0,\n        });\n\n        console.log(result);\n\n        if (!result.cancelled) {\n            // setImage(result.uri);\n            uploadImage(result.uri)\n                .then(r => Alert.alert(\n                    'Updated!',\n                    'Profile image updated!',\n                    [{text: \"OK\", onPress: () => props.navigation.goBack()}],\n                    {cancelable: true}\n                ))\n                .catch(error => {\n                    Alert.alert('Error!', 'Error in uploading!')\n                });\n        }\n    };\n\n\n    const uploadImage = async (uri) => {\n\n        const response = await fetch(uri);\n        const blob = await response.blob();\n\n        var ref = firebase\n            .storage()\n            .ref()\n            .child(\"users/\" + currentUserUID + '/' + 'image-1');\n\n        var downloadUrl = firebase\n            .storage()\n            .ref()\n            .child(\"users/\" + currentUserUID + '/' + 'image-1')\n            .getDownloadURL().then(function (url) {\n                console.log(url);\n                firebase.database().ref('users/' + currentUserUID + '/').update({\n                    image: url\n                }).then(r => alert('Image Updated'));\n\n            });\n\n        return ref.put(blob);\n    }\n\n    return (\n        <ScrollView\n            showsVerticalScrollIndicator={false}\n            style={styles.container}>\n            <SafeAreaView>\n                <View style={{height: 4}}/>\n                <StatusBar\n                    animated={true}\n                    backgroundColor=\"#61dafb\"/>\n                <TouchableOpacity\n                    onPress={pickImage}\n                    style={{flex: 1, marginTop: 10, alignItems: 'center'}}>\n                    <Avatar.Image size={100} source={profileImage == null ? require('../../assets/favicon.png') : imageUri}/>\n                </TouchableOpacity>\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Name\"\n                    placeholder=\"Type your name\"\n                    autoCapitalize='none'\n                    textContentType='name'\n                    value={name}\n                    onChangeText={text => setName(text)}\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Email\"\n                    editable={false}\n                    selectTextOnFocus={false}\n                    placeholder=\"Type your email\"\n                    autoCapitalize='none'\n                    textContentType='emailAddress'\n                    value={email}\n                    autoFocus={true}\n                    onChangeText={text => setEmail(text)}\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Phone Number\"\n                    placeholder=\"Type your phone number\"\n                    autoCapitalize='none'\n                    textContentType='telephoneNumber'\n                    value={phoneNumber}\n                    autoFocus={true}\n                    onChangeText={text => setPhoneNumber(text)}\n                />\n                <View style={{height: 10}}/>\n\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Password\"\n                    autoCapitalize='none'\n                    autoCorrect={false}\n                    secureTextEntry={true}\n                    textContentType='password'\n                    editable={false}\n                    selectTextOnFocus={false}\n                    value={password}\n                    onChangeText={text => setPassword(text)}\n                    placeholder=\"Type your password\"\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Bio\"\n                    placeholder=\"Type your bio\"\n                    autoCapitalize='none'\n                    textContentType='name'\n                    value={bio}\n                    onChangeText={text => setBio(text)}\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Website\"\n                    placeholder=\"Type your website link\"\n                    textContentType='URL'\n                    value={website}\n                    onChangeText={text => setWebsite(text)}\n                />\n                <View style={{height: 20}}/>\n                <Button icon=\"account\" mode=\"contained\" onPress={onHandleUpdateProfile}>\n                    Update\n                </Button>\n                <View style={{height: 30}}/>\n            </SafeAreaView>\n        </ScrollView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingLeft: 15,\n        paddingRight: 15,\n        marginTop: 20,\n        paddingBottom: 15,\n        backgroundColor: \"#fff\",\n    },\n});\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}