{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Desktop/expo-boilerplate-main/src/screens/SignIn.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { Button, Card, Headline, TextInput } from \"react-native-paper\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Firebase from \"../../firebase\";\nimport { signIn } from \"../api/firebaseAPI\";\nvar auth = Firebase.auth();\n\nvar SignInScreen = function SignInScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var onLogin = function onLogin() {\n    return _regeneratorRuntime.async(function onLogin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            try {\n              if (!email) {\n                alert('Email field is required.');\n              } else if (!password) {\n                alert('Password field is required.');\n              } else {\n                signIn(email, password).then(navigation.navigate('Main'));\n              }\n            } catch (error) {\n              alert(error.message);\n            }\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), React.createElement(Card.Cover, {\n    source: require(\"../../assets/signin-image.jpg\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), React.createElement(Headline, {\n    style: {\n      fontWeight: 'bold'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Sign In\"), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Email\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    textContentType: \"emailAddress\",\n    autoFocus: true,\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    placeholder: \"Type your email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    textContentType: \"password\",\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    placeholder: \"Type your password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: onLogin,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"SIGN IN\"), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    mode: \"text\",\n    onPress: function onPress() {\n      return navigation.navigate('SignUp');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"New Here? Sign Up here\"), React.createElement(View, {\n    style: {\n      height: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    paddingTop: 35,\n    paddingBottom: 15\n  }\n});\nexport default SignInScreen;","map":{"version":3,"sources":["/Users/mac/Desktop/expo-boilerplate-main/src/screens/SignIn.js"],"names":["React","useState","useNavigation","Button","Card","Headline","TextInput","Firebase","signIn","auth","SignInScreen","navigation","email","setEmail","password","setPassword","onLogin","alert","then","navigate","error","message","styles","container","require","height","fontWeight","backgroundColor","text","StyleSheet","create","flex","paddingLeft","paddingRight","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport {Button, Card, Headline, TextInput} from \"react-native-paper\";\nimport {SafeAreaView, ScrollView, StyleSheet, View} from \"react-native\";\nimport Firebase from '../../firebase';\nimport {signIn} from \"../api/firebaseAPI\";\n\nconst auth = Firebase.auth();\n\nconst SignInScreen = () => {\n    const navigation = useNavigation();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const onLogin = async () => {\n        try {\n            if (!email) {\n                alert('Email field is required.');\n            } else if (!password) {\n                alert('Password field is required.');\n            } else {\n                signIn(email, password).then(navigation.navigate('Main'));\n            }\n\n        } catch (error) {\n            alert(error.message);\n        }\n    };\n\n    return (\n        <ScrollView\n            showsVerticalScrollIndicator={false}\n            style={styles.container}>\n            <SafeAreaView/>\n            <Card.Cover source={require(\"../../assets/signin-image.jpg\")}/>\n            <View style={{height: 15}}></View>\n            <Headline style={{fontWeight: 'bold'}}>Sign In</Headline>\n            <View style={{height: 10}}></View>\n            <TextInput\n                style={{\n                    backgroundColor: \"#fff\"\n                }}\n                mode=\"outlined\"\n                label=\"Email\"\n                autoCapitalize='none'\n                keyboardType='email-address'\n                textContentType='emailAddress'\n                autoFocus={true}\n                value={email}\n                onChangeText={text => setEmail(text)}\n                placeholder=\"Type your email\"\n            />\n            <View style={{height: 10}}/>\n            <TextInput\n                style={{\n                    backgroundColor: \"#fff\"\n                }}\n                mode=\"outlined\"\n                label=\"Password\"\n                autoCapitalize='none'\n                autoCorrect={false}\n                secureTextEntry={true}\n                textContentType='password'\n                value={password}\n                onChangeText={text => setPassword(text)}\n                placeholder=\"Type your password\"\n            />\n            <View style={{height: 20}}/>\n            <Button mode=\"contained\" onPress={onLogin}>\n                SIGN IN\n            </Button>\n            <View style={{height: 20}}/>\n            <Button mode=\"text\" onPress={() => navigation.navigate('SignUp')}>\n                New Here? Sign Up here\n            </Button>\n            <View style={{height: 30}}/>\n        </ScrollView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingLeft: 15,\n        paddingRight: 15,\n        paddingTop: 35,\n        paddingBottom: 15,\n    },\n});\nexport default SignInScreen;\n"]},"metadata":{},"sourceType":"module"}