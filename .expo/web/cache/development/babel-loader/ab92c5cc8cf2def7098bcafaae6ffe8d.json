{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Desktop/expo-boilerplate-main/src/screens/ProfileScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar, Button, TextInput } from 'react-native-paper';\nimport firebase from \"firebase\";\n\nvar ProfileScreen = function ProfileScreen() {\n  var currentUserUID = firebase.auth().currentUser.uid;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      bio = _React$useState4[0],\n      setBio = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      website = _React$useState10[0],\n      setWebsite = _React$useState10[1];\n\n  useEffect(function () {\n    function getUserInfo() {\n      var doc, dataObj;\n      return _regeneratorRuntime.async(function getUserInfo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(firebase.firestore().collection('users').doc(currentUserUID).get());\n\n            case 2:\n              doc = _context.sent;\n\n              if (!doc.exists) {\n                alert('No user data found!');\n              } else {\n                dataObj = doc.data();\n                setName(dataObj.name);\n                setBio(dataObj.bio);\n                setPassword(dataObj.password);\n                setEmail(dataObj.email);\n                setWebsite(dataObj.website);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getUserInfo();\n  });\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), React.createElement(StatusBar, {\n    animated: true,\n    backgroundColor: \"#61dafb\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      marginTop: 10,\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, React.createElement(Avatar.Image, {\n    size: 100,\n    source: require(\"../../assets/favicon.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Name\",\n    placeholder: \"Type your name\",\n    autoCapitalize: \"none\",\n    textContentType: \"name\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Email\",\n    placeholder: \"Type your email\",\n    autoCapitalize: \"none\",\n    textContentType: \"email\",\n    value: email,\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Phone Number\",\n    placeholder: \"Type your phone number\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Password\",\n    placeholder: \"Type your password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Bio\",\n    placeholder: \"Type your bio\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Website\",\n    placeholder: \"Type your website link\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    icon: \"account\",\n    mode: \"contained\",\n    onPress: function onPress() {\n      return console.log('Pressed');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, \"Update\"), React.createElement(View, {\n    style: {\n      height: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginTop: 20,\n    paddingBottom: 15,\n    backgroundColor: \"#fff\"\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/mac/Desktop/expo-boilerplate-main/src/screens/ProfileScreen.js"],"names":["React","useEffect","Avatar","Button","TextInput","firebase","ProfileScreen","currentUserUID","auth","currentUser","uid","useState","name","setName","bio","setBio","email","setEmail","password","setPassword","website","setWebsite","getUserInfo","firestore","collection","doc","get","exists","alert","dataObj","data","styles","container","height","flex","marginTop","alignItems","require","backgroundColor","text","console","log","StyleSheet","create","paddingLeft","paddingRight","paddingBottom"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport {SafeAreaView, ScrollView, StatusBar, StyleSheet, View} from \"react-native\";\nimport {Avatar, Button, TextInput} from 'react-native-paper';\nimport firebase from \"firebase\";\n\nconst ProfileScreen = () => {\n    let currentUserUID = firebase.auth().currentUser.uid;\n\n    const [name, setName] = React.useState('');\n    const [bio, setBio] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [website, setWebsite] = React.useState('');\n\n    useEffect(() => {\n        async function getUserInfo() {\n            let doc = await firebase\n                .firestore()\n                .collection('users')\n                .doc(currentUserUID)\n                .get();\n\n            if (!doc.exists) {\n                alert('No user data found!')\n            } else {\n                let dataObj = doc.data();\n                setName(dataObj.name);\n                setBio(dataObj.bio);\n                setPassword(dataObj.password);\n                setEmail(dataObj.email);\n                setWebsite(dataObj.website);\n            }\n        }\n\n        getUserInfo();\n    })\n\n    return (\n        <ScrollView\n            showsVerticalScrollIndicator={false}\n            style={styles.container}>\n            <SafeAreaView>\n                <View style={{height: 4}}/>\n                <StatusBar\n                    animated={true}\n                    backgroundColor=\"#61dafb\"/>\n                <View style={{flex: 1, marginTop: 10, alignItems: 'center'}}>\n                    <Avatar.Image size={100} source={require('../../assets/favicon.png')}/>\n                </View>\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Name\"\n                    placeholder=\"Type your name\"\n                    autoCapitalize='none'\n                    textContentType='name'\n                    value={name}\n                    onChangeText={text => setName(text)}\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Email\"\n                    placeholder=\"Type your email\"\n                    autoCapitalize='none'\n                    textContentType='email'\n                    value={email}\n                    autoFocus={true}\n                    onChangeText={text => setEmail(text)}\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Phone Number\"\n                    placeholder=\"Type your phone number\"\n                />\n                <View style={{height: 10}}/>\n\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Password\"\n                    placeholder=\"Type your password\"\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Bio\"\n                    placeholder=\"Type your bio\"\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Website\"\n                    placeholder=\"Type your website link\"\n                />\n                <View style={{height: 20}}/>\n                <Button icon=\"account\" mode=\"contained\" onPress={() => console.log('Pressed')}>\n                    Update\n                </Button>\n                <View style={{height: 30}}/>\n            </SafeAreaView>\n        </ScrollView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingLeft: 15,\n        paddingRight: 15,\n        marginTop: 20,\n        paddingBottom: 15,\n        backgroundColor: \"#fff\",\n    },\n});\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}