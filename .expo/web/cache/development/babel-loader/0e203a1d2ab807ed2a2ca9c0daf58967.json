{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/mac/Desktop/expo-boilerplate-main/src/screens/ProfileScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar, Button, TextInput, Title } from 'react-native-paper';\nimport * as firebase from \"firebase\";\nimport { updateProfile } from \"../api/firebaseAPI\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { manipulateAsync, SaveFormat } from 'expo-image-manipulator';\nimport RoundImage from \"../components/RoundImage\";\n\nvar ProfileScreen = function ProfileScreen() {\n  var navigation = useNavigation();\n  var currentUserUID = firebase.auth().currentUser.uid;\n\n  var _React$useState = React.useState(''),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setName = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      bio = _React$useState4[0],\n      setBio = _React$useState4[1];\n\n  var _React$useState5 = React.useState(''),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      email = _React$useState6[0],\n      setEmail = _React$useState6[1];\n\n  var _React$useState7 = React.useState(''),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      password = _React$useState8[0],\n      setPassword = _React$useState8[1];\n\n  var _React$useState9 = React.useState(''),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      website = _React$useState10[0],\n      setWebsite = _React$useState10[1];\n\n  var _React$useState11 = React.useState(''),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      phoneNumber = _React$useState12[0],\n      setPhoneNumber = _React$useState12[1];\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      profileImage = _useState2[0],\n      setProfileImage = _useState2[1];\n\n  var imageUri = profileImage != null ? profileImage : \"\";\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      check = _useState6[0],\n      setCheck = _useState6[1];\n\n  var onHandleUpdateProfile = function onHandleUpdateProfile() {\n    return _regeneratorRuntime.async(function onHandleUpdateProfile$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(website.length > 3)) {\n              _context.next = 6;\n              break;\n            }\n\n            alert('Profile Updated');\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(updateProfile(name, phoneNumber, bio, website).then(navigation.navigate('Main')));\n\n          case 4:\n            _context.next = 7;\n            break;\n\n          case 6:\n            alert('Please fill the empty fields.');\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    function getUserInfo() {\n      var doc, dataObj;\n      return _regeneratorRuntime.async(function getUserInfo$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(firebase.firestore().collection('users').doc(currentUserUID).get());\n\n            case 2:\n              doc = _context2.sent;\n\n              if (!doc.exists) {\n                alert('No user data found!');\n              } else {\n                dataObj = doc.data();\n                setName(dataObj.name);\n                setBio(dataObj.bio);\n                setPassword(dataObj.password);\n                setEmail(dataObj.email);\n                setWebsite(dataObj.website);\n                setProfileImage(dataObj.profileImage);\n                setPhoneNumber(dataObj.phoneNumber);\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    getUserInfo();\n  });\n\n  var pickImage = function pickImage() {\n    var result, manipResult;\n    return _regeneratorRuntime.async(function pickImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.Images,\n              allowsEditing: true,\n              allowsMultipleSelection: false,\n              aspect: [4, 3],\n              quality: 0\n            }));\n\n          case 2:\n            result = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(manipulateAsync(result.localUri || result.uri, [{\n              resize: {\n                height: 320,\n                width: 320\n              }\n            }], {\n              compress: 0.1,\n              format: SaveFormat.PNG\n            }));\n\n          case 5:\n            manipResult = _context3.sent;\n            uploadImage(manipResult.uri).then(function (r) {\n              return Alert.alert('Updated!', 'Profile image updated!', [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  return navigation.goBack();\n                }\n              }], {\n                cancelable: true\n              });\n            }).catch(function (error) {\n              Alert.alert('Error!', 'Error in uploading!');\n            });\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var uploadImage = function uploadImage(uri) {\n    var response, db, blob, ref;\n    return _regeneratorRuntime.async(function uploadImage$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(fetch(uri));\n\n          case 2:\n            response = _context4.sent;\n            db = firebase.firestore();\n            _context4.next = 6;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 6:\n            blob = _context4.sent;\n            ref = firebase.storage().ref().child(\"users/\" + currentUserUID + '/' + 'image-1');\n            ref.getDownloadURL().then(function (url) {\n              return db.collection(\"users\").doc(currentUserUID).update({\n                profileImage: url\n              }).then(function (r) {\n                return alert('Image Updated');\n              });\n            });\n            return _context4.abrupt(\"return\", ref.put(blob));\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, React.createElement(SafeAreaView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      height: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), React.createElement(StatusBar, {\n    animated: true,\n    backgroundColor: \"#61dafb\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: pickImage,\n    style: {\n      flex: 1,\n      marginTop: 10,\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, React.createElement(RoundImage, {\n    width: Dimensions.get('window').width / 4,\n    height: Dimensions.get('window').width / 4,\n    source: profileImage.length !== 0 ? {\n      uri: imageUri\n    } : require(\"../../assets/favicon.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Name\",\n    placeholder: \"Type your name\",\n    autoCapitalize: \"none\",\n    textContentType: \"name\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Email\",\n    editable: false,\n    selectTextOnFocus: false,\n    placeholder: \"Type your email\",\n    autoCapitalize: \"none\",\n    textContentType: \"emailAddress\",\n    value: email,\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Phone Number\",\n    placeholder: \"Type your phone number\",\n    autoCapitalize: \"none\",\n    textContentType: \"telephoneNumber\",\n    value: phoneNumber,\n    autoFocus: true,\n    onChangeText: function onChangeText(text) {\n      return setPhoneNumber(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Password\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    secureTextEntry: true,\n    textContentType: \"password\",\n    editable: false,\n    selectTextOnFocus: false,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    placeholder: \"Type your password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Bio\",\n    placeholder: \"Type your bio\",\n    autoCapitalize: \"none\",\n    textContentType: \"name\",\n    value: bio,\n    onChangeText: function onChangeText(text) {\n      return setBio(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }), React.createElement(TextInput, {\n    style: {\n      backgroundColor: \"#fff\"\n    },\n    mode: \"outlined\",\n    label: \"Website\",\n    placeholder: \"Type your website link\",\n    textContentType: \"URL\",\n    value: website,\n    onChangeText: function onChangeText(text) {\n      return setWebsite(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    icon: \"account\",\n    mode: \"contained\",\n    onPress: onHandleUpdateProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, \"Update\"), React.createElement(View, {\n    style: {\n      height: 30\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    marginTop: 20,\n    paddingBottom: 15,\n    backgroundColor: \"#fff\"\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/mac/Desktop/expo-boilerplate-main/src/screens/ProfileScreen.js"],"names":["React","useEffect","useState","Avatar","Button","TextInput","Title","firebase","updateProfile","useNavigation","ImagePicker","manipulateAsync","SaveFormat","RoundImage","ProfileScreen","navigation","currentUserUID","auth","currentUser","uid","name","setName","bio","setBio","email","setEmail","password","setPassword","website","setWebsite","phoneNumber","setPhoneNumber","profileImage","setProfileImage","imageUri","isLoading","setLoading","check","setCheck","onHandleUpdateProfile","length","alert","then","navigate","getUserInfo","firestore","collection","doc","get","exists","dataObj","data","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","allowsMultipleSelection","aspect","quality","result","localUri","uri","resize","height","width","compress","format","PNG","manipResult","uploadImage","r","Alert","text","onPress","goBack","cancelable","catch","error","fetch","response","db","blob","ref","storage","child","getDownloadURL","url","update","put","styles","container","flex","marginTop","alignItems","Dimensions","require","backgroundColor","StyleSheet","create","paddingLeft","paddingRight","paddingBottom"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;;;;;;AAEA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,KAAnC,QAA+C,oBAA/C;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAAQC,aAAR;AACA,SAAQC,aAAR,QAA4B,0BAA5B;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,SAAQC,eAAR,EAAyBC,UAAzB,QAA0C,wBAA1C;AACA,OAAOC,UAAP;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,MAAMC,UAAU,GAAGN,aAAa,EAAhC;AACA,MAAIO,cAAc,GAAGT,QAAQ,CAACU,IAAT,GAAgBC,WAAhB,CAA4BC,GAAjD;;AAEA,wBAAwBnB,KAAK,CAACE,QAAN,CAAe,EAAf,CAAxB;AAAA;AAAA,MAAOkB,IAAP;AAAA,MAAaC,OAAb;;AACA,yBAAsBrB,KAAK,CAACE,QAAN,CAAe,EAAf,CAAtB;AAAA;AAAA,MAAOoB,GAAP;AAAA,MAAYC,MAAZ;;AACA,yBAA0BvB,KAAK,CAACE,QAAN,CAAe,EAAf,CAA1B;AAAA;AAAA,MAAOsB,KAAP;AAAA,MAAcC,QAAd;;AACA,yBAAgCzB,KAAK,CAACE,QAAN,CAAe,EAAf,CAAhC;AAAA;AAAA,MAAOwB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,yBAA8B3B,KAAK,CAACE,QAAN,CAAe,EAAf,CAA9B;AAAA;AAAA,MAAO0B,OAAP;AAAA,MAAgBC,UAAhB;;AACA,0BAAsC7B,KAAK,CAACE,QAAN,CAAe,EAAf,CAAtC;AAAA;AAAA,MAAO4B,WAAP;AAAA,MAAoBC,cAApB;;AACA,kBAAwC7B,QAAQ,CAAC,EAAD,CAAhD;AAAA;AAAA,MAAO8B,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMC,QAAQ,GAAGF,YAAY,IAAI,IAAhB,GAAuBA,YAAvB,GAAsC,EAAvD;;AACA,mBAAgC9B,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOiC,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAA0BlC,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOmC,KAAP;AAAA,MAAcC,QAAd;;AAGA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA,kBACtBX,OAAO,CAACY,MAAR,GAAiB,CADK;AAAA;AAAA;AAAA;;AAEtBC,YAAAA,KAAK,CAAC,iBAAD,CAAL;AAFsB;AAAA,6CAGhBjC,aAAa,CAACY,IAAD,EAAOU,WAAP,EAAoBR,GAApB,EAAyBM,OAAzB,CAAb,CACDc,IADC,CACI3B,UAAU,CAAC4B,QAAX,CAAoB,MAApB,CADJ,CAHgB;;AAAA;AAAA;AAAA;;AAAA;AAMtBF,YAAAA,KAAK,CAAC,+BAAD,CAAL;;AANsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA9B;;AAUAxC,EAAAA,SAAS,CAAC,YAAM;AACZ,aAAe2C,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACoBrC,QAAQ,CACnBsC,SADW,GAEXC,UAFW,CAEA,OAFA,EAGXC,GAHW,CAGP/B,cAHO,EAIXgC,GAJW,EADpB;;AAAA;AACQD,cAAAA,GADR;;AAOI,kBAAI,CAACA,GAAG,CAACE,MAAT,EAAiB;AACbR,gBAAAA,KAAK,CAAC,qBAAD,CAAL;AACH,eAFD,MAEO;AACCS,gBAAAA,OADD,GACWH,GAAG,CAACI,IAAJ,EADX;AAEH9B,gBAAAA,OAAO,CAAC6B,OAAO,CAAC9B,IAAT,CAAP;AACAG,gBAAAA,MAAM,CAAC2B,OAAO,CAAC5B,GAAT,CAAN;AACAK,gBAAAA,WAAW,CAACuB,OAAO,CAACxB,QAAT,CAAX;AACAD,gBAAAA,QAAQ,CAACyB,OAAO,CAAC1B,KAAT,CAAR;AACAK,gBAAAA,UAAU,CAACqB,OAAO,CAACtB,OAAT,CAAV;AACAK,gBAAAA,eAAe,CAACiB,OAAO,CAAClB,YAAT,CAAf;AACAD,gBAAAA,cAAc,CAACmB,OAAO,CAACpB,WAAT,CAAd;AACH;;AAlBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBAc,IAAAA,WAAW;AACd,GAvBQ,CAAT;;AAyBA,MAAMQ,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACK1C,WAAW,CAAC2C,uBAAZ,CAAoC;AACnDC,cAAAA,UAAU,EAAE5C,WAAW,CAAC6C,gBAAZ,CAA6BC,MADU;AAEnDC,cAAAA,aAAa,EAAE,IAFoC;AAGnDC,cAAAA,uBAAuB,EAAE,KAH0B;AAInDC,cAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAJ2C;AAKnDC,cAAAA,OAAO,EAAE;AAL0C,aAApC,CADL;;AAAA;AACVC,YAAAA,MADU;AAAA;AAAA,6CAQYlD,eAAe,CACrCkD,MAAM,CAACC,QAAP,IAAmBD,MAAM,CAACE,GADW,EAErC,CACI;AACIC,cAAAA,MAAM,EACF;AACIC,gBAAAA,MAAM,EAAE,GADZ;AAEIC,gBAAAA,KAAK,EAAE;AAFX;AAFR,aADJ,CAFqC,EAWrC;AAACC,cAAAA,QAAQ,EAAE,GAAX;AAAgBC,cAAAA,MAAM,EAAExD,UAAU,CAACyD;AAAnC,aAXqC,CAR3B;;AAAA;AAQRC,YAAAA,WARQ;AAqBdC,YAAAA,WAAW,CAACD,WAAW,CAACP,GAAb,CAAX,CACKrB,IADL,CACU,UAAA8B,CAAC;AAAA,qBAAIC,KAAK,CAAChC,KAAN,CACP,UADO,EAEP,wBAFO,EAGP,CAAC;AAACiC,gBAAAA,IAAI,EAAE,IAAP;AAAaC,gBAAAA,OAAO,EAAE;AAAA,yBAAM5D,UAAU,CAAC6D,MAAX,EAAN;AAAA;AAAtB,eAAD,CAHO,EAIP;AAACC,gBAAAA,UAAU,EAAE;AAAb,eAJO,CAAJ;AAAA,aADX,EAOKC,KAPL,CAOW,UAAAC,KAAK,EAAI;AACZN,cAAAA,KAAK,CAAChC,KAAN,CAAY,QAAZ,EAAsB,qBAAtB;AACH,aATL;;AArBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAkCA,MAAM8B,WAAW,GAAG,SAAdA,WAAc,CAAOR,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOiB,KAAK,CAACjB,GAAD,CADZ;;AAAA;AACVkB,YAAAA,QADU;AAEVC,YAAAA,EAFU,GAEL3E,QAAQ,CAACsC,SAAT,EAFK;AAAA;AAAA,6CAGGoC,QAAQ,CAACE,IAAT,EAHH;;AAAA;AAGVA,YAAAA,IAHU;AAIZC,YAAAA,GAJY,GAKZ7E,QAAQ,CACH8E,OADL,GAEKD,GAFL,GAGKE,KAHL,CAGW,WAAWtE,cAAX,GAA4B,GAA5B,GAAkC,SAH7C,CALY;AAShBoE,YAAAA,GAAG,CAACG,cAAJ,GAAqB7C,IAArB,CAA0B,UAAC8C,GAAD;AAAA,qBACtBN,EAAE,CAACpC,UAAH,CAAc,OAAd,EACKC,GADL,CACS/B,cADT,EAEKyE,MAFL,CAEY;AACJzD,gBAAAA,YAAY,EAAEwD;AADV,eAFZ,EAIO9C,IAJP,CAIY,UAAA8B,CAAC;AAAA,uBACT/B,KAAK,CAAC,eAAD,CADI;AAAA,eAJb,CADsB;AAAA,aAA1B;AATgB,8CAkBT2C,GAAG,CAACM,GAAJ,CAAQP,IAAR,CAlBS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAqBA,SACI,oBAAC,UAAD;AACI,IAAA,4BAA4B,EAAE,KADlC;AAEI,IAAA,KAAK,EAAEQ,MAAM,CAACC,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC3B,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,SAAD;AACI,IAAA,QAAQ,EAAE,IADd;AAEI,IAAA,eAAe,EAAC,SAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAKI,oBAAC,gBAAD;AACI,IAAA,OAAO,EAAEb,SADb;AAEI,IAAA,KAAK,EAAE;AAACyC,MAAAA,IAAI,EAAE,CAAP;AAAUC,MAAAA,SAAS,EAAE,EAArB;AAAyBC,MAAAA,UAAU,EAAE;AAArC,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,UAAD;AACI,IAAA,KAAK,EAAEC,UAAU,CAAChD,GAAX,CAAe,QAAf,EAAyBkB,KAAzB,GAAiC,CAD5C;AAEI,IAAA,MAAM,EAAE8B,UAAU,CAAChD,GAAX,CAAe,QAAf,EAAyBkB,KAAzB,GAAiC,CAF7C;AAGI,IAAA,MAAM,EAAElC,YAAY,CAACQ,MAAb,KAAwB,CAAxB,GAA4B;AAACuB,MAAAA,GAAG,EAAE7B;AAAN,KAA5B,GAA8C+D,OAAO,4BAHjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CALJ,EAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAChC,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,EAcI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE;AACHiC,MAAAA,eAAe,EAAE;AADd,KADX;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,KAAK,EAAC,MALV;AAMI,IAAA,WAAW,EAAC,gBANhB;AAOI,IAAA,cAAc,EAAC,MAPnB;AAQI,IAAA,eAAe,EAAC,MARpB;AASI,IAAA,KAAK,EAAE9E,IATX;AAUI,IAAA,YAAY,EAAE,sBAAAsD,IAAI;AAAA,aAAIrD,OAAO,CAACqD,IAAD,CAAX;AAAA,KAVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,EA0BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACT,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BJ,EA2BI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE;AACHiC,MAAAA,eAAe,EAAE;AADd,KADX;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,KAAK,EAAC,OALV;AAMI,IAAA,QAAQ,EAAE,KANd;AAOI,IAAA,iBAAiB,EAAE,KAPvB;AAQI,IAAA,WAAW,EAAC,iBARhB;AASI,IAAA,cAAc,EAAC,MATnB;AAUI,IAAA,eAAe,EAAC,cAVpB;AAWI,IAAA,KAAK,EAAE1E,KAXX;AAYI,IAAA,SAAS,EAAE,IAZf;AAaI,IAAA,YAAY,EAAE,sBAAAkD,IAAI;AAAA,aAAIjD,QAAQ,CAACiD,IAAD,CAAZ;AAAA,KAbtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BJ,EA0CI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACT,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CJ,EA2CI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE;AACHiC,MAAAA,eAAe,EAAE;AADd,KADX;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,KAAK,EAAC,cALV;AAMI,IAAA,WAAW,EAAC,wBANhB;AAOI,IAAA,cAAc,EAAC,MAPnB;AAQI,IAAA,eAAe,EAAC,iBARpB;AASI,IAAA,KAAK,EAAEpE,WATX;AAUI,IAAA,SAAS,EAAE,IAVf;AAWI,IAAA,YAAY,EAAE,sBAAA4C,IAAI;AAAA,aAAI3C,cAAc,CAAC2C,IAAD,CAAlB;AAAA,KAXtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3CJ,EAwDI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACT,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDJ,EA0DI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE;AACHiC,MAAAA,eAAe,EAAE;AADd,KADX;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,KAAK,EAAC,UALV;AAMI,IAAA,cAAc,EAAC,MANnB;AAOI,IAAA,WAAW,EAAE,KAPjB;AAQI,IAAA,eAAe,EAAE,IARrB;AASI,IAAA,eAAe,EAAC,UATpB;AAUI,IAAA,QAAQ,EAAE,KAVd;AAWI,IAAA,iBAAiB,EAAE,KAXvB;AAYI,IAAA,KAAK,EAAExE,QAZX;AAaI,IAAA,YAAY,EAAE,sBAAAgD,IAAI;AAAA,aAAI/C,WAAW,CAAC+C,IAAD,CAAf;AAAA,KAbtB;AAcI,IAAA,WAAW,EAAC,oBAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1DJ,EA0EI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACT,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1EJ,EA2EI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE;AACHiC,MAAAA,eAAe,EAAE;AADd,KADX;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,KAAK,EAAC,KALV;AAMI,IAAA,WAAW,EAAC,eANhB;AAOI,IAAA,cAAc,EAAC,MAPnB;AAQI,IAAA,eAAe,EAAC,MARpB;AASI,IAAA,KAAK,EAAE5E,GATX;AAUI,IAAA,YAAY,EAAE,sBAAAoD,IAAI;AAAA,aAAInD,MAAM,CAACmD,IAAD,CAAV;AAAA,KAVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3EJ,EAuFI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACT,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvFJ,EAwFI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAE;AACHiC,MAAAA,eAAe,EAAE;AADd,KADX;AAII,IAAA,IAAI,EAAC,UAJT;AAKI,IAAA,KAAK,EAAC,SALV;AAMI,IAAA,WAAW,EAAC,wBANhB;AAOI,IAAA,eAAe,EAAC,KAPpB;AAQI,IAAA,KAAK,EAAEtE,OARX;AASI,IAAA,YAAY,EAAE,sBAAA8C,IAAI;AAAA,aAAI7C,UAAU,CAAC6C,IAAD,CAAd;AAAA,KATtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxFJ,EAmGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACT,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnGJ,EAoGI,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,IAAI,EAAC,WAA5B;AAAwC,IAAA,OAAO,EAAE1B,qBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApGJ,EAuGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAC0B,MAAAA,MAAM,EAAE;AAAT,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvGJ,CAHJ,CADJ;AA+GH,CA1ND;;AA4NA,IAAM0B,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPQ,IAAAA,WAAW,EAAE,EAFN;AAGPC,IAAAA,YAAY,EAAE,EAHP;AAIPR,IAAAA,SAAS,EAAE,EAJJ;AAKPS,IAAAA,aAAa,EAAE,EALR;AAMPL,IAAAA,eAAe,EAAE;AANV;AADkB,CAAlB,CAAf;AAWA,eAAepF,aAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Alert, Dimensions, SafeAreaView, ScrollView, StatusBar, StyleSheet, TouchableOpacity, View} from \"react-native\";\nimport {Avatar, Button, TextInput, Title} from 'react-native-paper';\nimport * as firebase from \"firebase\";\nimport {updateProfile} from \"../api/firebaseAPI\";\nimport {useNavigation} from \"@react-navigation/native\";\nimport * as ImagePicker from 'expo-image-picker';\nimport {manipulateAsync, SaveFormat} from 'expo-image-manipulator';\nimport RoundImage from \"../components/RoundImage\";\n\nconst ProfileScreen = () => {\n    const navigation = useNavigation();\n    let currentUserUID = firebase.auth().currentUser.uid;\n\n    const [name, setName] = React.useState('');\n    const [bio, setBio] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n    const [website, setWebsite] = React.useState('');\n    const [phoneNumber, setPhoneNumber] = React.useState('');\n    const [profileImage, setProfileImage] = useState('');\n\n    const imageUri = profileImage != null ? profileImage : \"\";\n    const [isLoading, setLoading] = useState(false);\n    const [check, setCheck] = useState(true);\n\n\n    const onHandleUpdateProfile = async () => {\n        if (website.length > 3) {\n            alert('Profile Updated')\n            await updateProfile(name, phoneNumber, bio, website)\n                .then(navigation.navigate('Main'));\n        } else {\n            alert('Please fill the empty fields.')\n        }\n    };\n\n    useEffect(() => {\n        async function getUserInfo() {\n            let doc = await firebase\n                .firestore()\n                .collection('users')\n                .doc(currentUserUID)\n                .get();\n\n            if (!doc.exists) {\n                alert('No user data found!')\n            } else {\n                let dataObj = doc.data();\n                setName(dataObj.name);\n                setBio(dataObj.bio);\n                setPassword(dataObj.password);\n                setEmail(dataObj.email);\n                setWebsite(dataObj.website);\n                setProfileImage(dataObj.profileImage);\n                setPhoneNumber(dataObj.phoneNumber);\n            }\n        }\n\n        getUserInfo();\n    });\n\n    const pickImage = async () => {\n        let result = await ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            allowsMultipleSelection: false,\n            aspect: [4, 3],\n            quality: 0\n        });\n        const manipResult = await manipulateAsync(\n            result.localUri || result.uri,\n            [\n                {\n                    resize:\n                        {\n                            height: 320,\n                            width: 320\n                        }\n                }\n            ],\n            {compress: 0.1, format: SaveFormat.PNG}\n        );\n        uploadImage(manipResult.uri)\n            .then(r => Alert.alert(\n                'Updated!',\n                'Profile image updated!',\n                [{text: \"OK\", onPress: () => navigation.goBack()}],\n                {cancelable: true}\n            ))\n            .catch(error => {\n                Alert.alert('Error!', 'Error in uploading!')\n            });\n    };\n\n\n    const uploadImage = async (uri) => {\n        const response = await fetch(uri);\n        const db = firebase.firestore();\n        const blob = await response.blob();\n        let ref =\n            firebase\n                .storage()\n                .ref()\n                .child(\"users/\" + currentUserUID + '/' + 'image-1');\n        ref.getDownloadURL().then((url) =>\n            db.collection(\"users\")\n                .doc(currentUserUID)\n                .update({\n                    profileImage: url\n                }).then(r =>\n                alert('Image Updated'))\n        )\n\n        return ref.put(blob);\n    }\n\n    return (\n        <ScrollView\n            showsVerticalScrollIndicator={false}\n            style={styles.container}>\n            <SafeAreaView>\n                <View style={{height: 4}}/>\n                <StatusBar\n                    animated={true}\n                    backgroundColor=\"#61dafb\"/>\n                <TouchableOpacity\n                    onPress={pickImage}\n                    style={{flex: 1, marginTop: 10, alignItems: 'center'}}>\n                    <RoundImage\n                        width={Dimensions.get('window').width / 4}\n                        height={Dimensions.get('window').width / 4}\n                        source={profileImage.length !== 0 ? {uri: imageUri} : require('../../assets/favicon.png')}                    />\n                </TouchableOpacity>\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Name\"\n                    placeholder=\"Type your name\"\n                    autoCapitalize='none'\n                    textContentType='name'\n                    value={name}\n                    onChangeText={text => setName(text)}\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Email\"\n                    editable={false}\n                    selectTextOnFocus={false}\n                    placeholder=\"Type your email\"\n                    autoCapitalize='none'\n                    textContentType='emailAddress'\n                    value={email}\n                    autoFocus={true}\n                    onChangeText={text => setEmail(text)}\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Phone Number\"\n                    placeholder=\"Type your phone number\"\n                    autoCapitalize='none'\n                    textContentType='telephoneNumber'\n                    value={phoneNumber}\n                    autoFocus={true}\n                    onChangeText={text => setPhoneNumber(text)}\n                />\n                <View style={{height: 10}}/>\n\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Password\"\n                    autoCapitalize='none'\n                    autoCorrect={false}\n                    secureTextEntry={true}\n                    textContentType='password'\n                    editable={false}\n                    selectTextOnFocus={false}\n                    value={password}\n                    onChangeText={text => setPassword(text)}\n                    placeholder=\"Type your password\"\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Bio\"\n                    placeholder=\"Type your bio\"\n                    autoCapitalize='none'\n                    textContentType='name'\n                    value={bio}\n                    onChangeText={text => setBio(text)}\n                />\n                <View style={{height: 10}}/>\n                <TextInput\n                    style={{\n                        backgroundColor: \"#fff\"\n                    }}\n                    mode=\"outlined\"\n                    label=\"Website\"\n                    placeholder=\"Type your website link\"\n                    textContentType='URL'\n                    value={website}\n                    onChangeText={text => setWebsite(text)}\n                />\n                <View style={{height: 20}}/>\n                <Button icon=\"account\" mode=\"contained\" onPress={onHandleUpdateProfile}>\n                    Update\n                </Button>\n                <View style={{height: 30}}/>\n            </SafeAreaView>\n        </ScrollView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        paddingLeft: 15,\n        paddingRight: 15,\n        marginTop: 20,\n        paddingBottom: 15,\n        backgroundColor: \"#fff\",\n    },\n});\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}